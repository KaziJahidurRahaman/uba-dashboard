# Generated by Django 4.1.12 on 2024-03-22 00:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Instrument",
            fields=[
                ("instrument_id", models.AutoField(primary_key=True, serialize=False)),
                ("instrument_serial_no", models.CharField(max_length=50, null=True)),
                ("instrument_name", models.CharField(max_length=50, null=True)),
                ("instrument_comment", models.CharField(max_length=255, null=True)),
            ],
            options={
                "verbose_name_plural": "Instruments",
                "db_table": "tbl_instruments",
            },
        ),
        migrations.CreateModel(
            name="Object",
            fields=[
                (
                    "object_id",
                    models.AutoField(
                        db_column="ObjectID",
                        primary_key=True,
                        serialize=False,
                        verbose_name="unique db id of the sample",
                    ),
                ),
                (
                    "object_code",
                    models.CharField(
                        db_column="ObjectCode",
                        default=None,
                        max_length=10,
                        unique=True,
                        verbose_name="name/code of the object",
                    ),
                ),
                (
                    "object_collection_date",
                    models.DateField(
                        db_column="ObjectColDate",
                        default=None,
                        null=True,
                        verbose_name="the day sample was collected",
                    ),
                ),
                (
                    "object_collection_time",
                    models.TimeField(
                        db_column="ObjectColTime",
                        default=None,
                        null=True,
                        verbose_name="time of the day sample was collected",
                    ),
                ),
                (
                    "object_comment",
                    models.CharField(
                        db_column="ObjectComment",
                        default=None,
                        max_length=100,
                        null=True,
                        verbose_name="additional info",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Objects",
                "db_table": "tbl_objects",
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "p_id",
                    models.AutoField(
                        db_column="PID",
                        default=0,
                        primary_key=True,
                        serialize=False,
                        verbose_name="unique db id of the person",
                    ),
                ),
                (
                    "p_initials",
                    models.CharField(
                        db_column="PInitials",
                        max_length=15,
                        unique=True,
                        verbose_name="unique initials of the person",
                    ),
                ),
                (
                    "p_name",
                    models.CharField(db_column="P_Name", max_length=255, null=True),
                ),
                ("p_eid", models.IntegerField(db_column="P_EID", default=0)),
            ],
            options={
                "verbose_name_plural": "Persons",
                "db_table": "tbl_persons",
            },
        ),
        migrations.CreateModel(
            name="SampleType",
            fields=[
                ("sample_type_id", models.AutoField(primary_key=True, serialize=False)),
                ("sample_type_code", models.CharField(max_length=7)),
                ("sample_type_units", models.JSONField()),
                ("description", models.TextField(null=True)),
            ],
            options={
                "verbose_name_plural": "SampleTypes",
                "db_table": "tbl_sample_types",
            },
        ),
        migrations.CreateModel(
            name="Weather",
            fields=[
                ("weather_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("weather_date", models.DateField(default=None, null=True)),
                ("weather_time", models.TimeField(default=None, null=True)),
                ("weather_precipitation", models.FloatField(default=None, null=True)),
                ("weather_evaporation", models.FloatField(default=None, null=True)),
                (
                    "objectweight_db_timestamp",
                    models.DateTimeField(default=None, null=True),
                ),
            ],
            options={
                "verbose_name_plural": "Weathers",
                "db_table": "tbl_weathers",
            },
        ),
        migrations.CreateModel(
            name="Sample",
            fields=[
                (
                    "sample_id",
                    models.BigAutoField(
                        db_column="SampleID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "sample_date",
                    models.DateField(db_column="SampleDate", default=None, null=True),
                ),
                (
                    "sample_time",
                    models.TimeField(db_column="SampleTime", default=None, null=True),
                ),
                (
                    "sample_volume",
                    models.FloatField(db_column="Volume_mL", default=None, null=True),
                ),
                (
                    "sample_pH",
                    models.FloatField(db_column="pH", default=None, null=True),
                ),
                (
                    "sample_ec",
                    models.FloatField(
                        db_column="EConductivity", default=None, null=True
                    ),
                ),
                (
                    "sample_nitrite",
                    models.FloatField(db_column="Nitrite", default=None, null=True),
                ),
                (
                    "sample_bromid",
                    models.FloatField(db_column="Bromid", default=None, null=True),
                ),
                (
                    "sample_nitrate",
                    models.FloatField(db_column="Nitrate", default=None, null=True),
                ),
                (
                    "sample_phosphate",
                    models.FloatField(db_column="Phosphate", default=None, null=True),
                ),
                (
                    "sample_fluorid",
                    models.FloatField(db_column="Flourid", default=None, null=True),
                ),
                (
                    "sample_chlorid",
                    models.FloatField(db_column="Clorid", default=None, null=True),
                ),
                (
                    "sample_sulfat",
                    models.FloatField(db_column="Sulfat", default=None, null=True),
                ),
                (
                    "sample_doc",
                    models.FloatField(db_column="DOC", default=None, null=True),
                ),
                (
                    "sample_toc",
                    models.FloatField(db_column="TOC", default=None, null=True),
                ),
                (
                    "sample_2NPT",
                    models.FloatField(db_column="2NPT", default=None, null=True),
                ),
                (
                    "sample_MPA",
                    models.FloatField(db_column="MPA", default=None, null=True),
                ),
                (
                    "sample_comment",
                    models.TextField(db_column="Comment", default=None, null=True),
                ),
                (
                    "sample_created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_column="created_at", null=True
                    ),
                ),
                (
                    "sample_object",
                    models.ForeignKey(
                        db_column="SampleObject",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="home.object",
                    ),
                ),
                (
                    "sample_person",
                    models.ForeignKey(
                        db_column="SamplingPerson",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="home.person",
                        to_field="p_initials",
                    ),
                ),
                (
                    "sample_type",
                    models.ForeignKey(
                        db_column="SampleType",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="home.sampletype",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Samples",
                "db_table": "tbl_samples",
            },
        ),
        migrations.CreateModel(
            name="ObjectWeight",
            fields=[
                (
                    "objectweight_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("objectweight_date", models.DateField(default=None, null=True)),
                ("objectweight_time", models.TimeField(default=None, null=True)),
                ("objectweight_total", models.FloatField(default=None, null=True)),
                ("objectweight_drainage", models.FloatField(default=None, null=True)),
                ("objectweight_comment", models.TextField(default=None, null=True)),
                (
                    "objectweight_db_timestamp",
                    models.DateTimeField(default=None, null=True),
                ),
                (
                    "objectweight_objectid",
                    models.ForeignKey(
                        db_column="objectweight_objectid",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="home.object",
                    ),
                ),
                (
                    "objectweight_person",
                    models.ForeignKey(
                        db_column="objectweight_person_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="home.person",
                        to_field="p_initials",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "ObjectWeights",
                "db_table": "tbl_objectWeights",
            },
        ),
        migrations.AddField(
            model_name="object",
            name="object_collector",
            field=models.ForeignKey(
                db_column="ObjectCollector",
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="home.person",
                to_field="p_initials",
                verbose_name="initials of the person who collected the sample",
            ),
        ),
        migrations.AddField(
            model_name="object",
            name="object_instrument",
            field=models.ForeignKey(
                db_column="ObjectInstrument",
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="home.instrument",
                verbose_name="db id of the instrument used for sampling",
            ),
        ),
        migrations.CreateModel(
            name="Activity",
            fields=[
                ("activity_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("activity_date", models.DateField(default=None, null=True)),
                ("activity_time", models.TimeField(default=None, null=True)),
                (
                    "activity_type",
                    models.CharField(
                        default=None,
                        max_length=1,
                        null=True,
                        verbose_name="C = Crop, Watering = W, Others = O",
                    ),
                ),
                ("activity_comment", models.TextField(default=None, null=True)),
                (
                    "activity_db_timestamp",
                    models.DateTimeField(auto_now=True, null=True),
                ),
                (
                    "activity_object",
                    models.ForeignKey(
                        db_column="activity_objectid",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="home.object",
                    ),
                ),
                (
                    "activity_person",
                    models.ForeignKey(
                        db_column="activity_person_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="home.person",
                        to_field="p_initials",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Activities",
                "db_table": "tbl_activities",
            },
        ),
    ]
